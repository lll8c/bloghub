// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"geektime/webook/internal/repository"
	"geektime/webook/internal/repository/article"
	"geektime/webook/internal/repository/cache"
	dao2 "geektime/webook/internal/repository/dao"
	"geektime/webook/internal/repository/dao/article"
	"geektime/webook/internal/service"
	"geektime/webook/internal/web"
	"geektime/webook/internal/web/jwt"
	"geektime/webook/ioc"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitArticleHandler(articleDao dao.ArticleDAO) *web.ArticleHandler {
	articleRepository := article.NewArticleRepository(articleDao)
	loggerV1 := InitLogger()
	articleService := service.NewArticleService(articleRepository, loggerV1)
	articleHandler := web.NewArticleHandler(articleService, loggerV1)
	return articleHandler
}

func InitWebServer() *gin.Engine {
	cmdable := ioc.InitRedis()
	jwtHandler := jwt.NewRedisJWTHandler(cmdable)
	loggerV1 := ioc.InitLoggerV1()
	v := ioc.InitMiddlewares(jwtHandler, loggerV1)
	db := ioc.InitDB(loggerV1)
	userDAO := dao2.NewUserDao(db)
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewUserRepository(userDAO, userCache)
	userService := service.NewUserService(userRepository)
	codeCache := cache.NewCodeCache(cmdable)
	codeRepository := repository.NewCodeRepository(codeCache)
	smsService := ioc.InitSMSService()
	codeService := service.NewCodeService(codeRepository, smsService)
	userHandler := web.NewUserHandler(userService, codeService, jwtHandler)
	wechatService := ioc.InitWechatService()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(wechatService, userService, jwtHandler)
	articleDAO := dao.NewGROMArticleDAO(db)
	articleRepository := article.NewArticleRepository(articleDAO)
	articleService := service.NewArticleService(articleRepository, loggerV1)
	articleHandler := web.NewArticleHandler(articleService, loggerV1)
	engine := ioc.InitWebServer(v, userHandler, oAuth2WechatHandler, articleHandler)
	return engine
}

// wire.go:

var thirdPartySet = wire.NewSet(
	InitRedis, InitDB,
	InitLogger)

var userSvcProvider = wire.NewSet(dao2.NewUserDao, cache.NewUserCache, repository.NewUserRepository, service.NewUserService)

var articlSvcProvider = wire.NewSet(article.NewArticleRepository, service.NewArticleService)
